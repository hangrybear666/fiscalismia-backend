user nginx; # Run worker processes as nginx user (not root)
worker_processes auto; # Automatically detect number of CPU cores
error_log /var/log/nginx/error.log warn; # Log errors at 'warn' level and above
pid /run/nginx/nginx.pid; # Process ID file location

events {
    worker_connections 1024; # Max simultaneous connections per worker process
    use epoll; # Efficient event notification for Linux
}

http {

    include /etc/nginx/mime.types; # Load MIME type definitions for file extensions
    default_type application/octet-stream; # Default MIME type for unknown files
    
    sendfile on; # Use kernel sendfile() for faster file transfers
    tcp_nopush on; # Optimize packet transmission (only send full packets)
    tcp_nodelay on; # Disable Nagle's algorithm for low-latency
    keepalive_timeout 65; # Keep connections alive for 65 seconds
    types_hash_max_size 2048; # Max size of MIME types hash table
    server_tokens off; # Hide nginx version in error pages/headers (security)

    # Increase map hash bucket size to handle longer domain names
    map_hash_bucket_size 128;

    # Nginx Logging setup
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main; # Write access logs using 'main' format

    # Required for WebSocket proxying
    map $http_upgrade $connection_upgrade {
        default upgrade; # If Upgrade header exists, set to 'upgrade'
        '' close; # If no Upgrade header, close the connection
    }
    # CORS origin mapping for localhost vite development (dev and build/preview as well as actual remote domain)
    map $http_origin $cors_header {
        default ""; # By default, don't allow any origin
        "http://localhost:3001" "$http_origin"; # frontend development
    }

    gzip on; # Enable gzip compression
    gzip_vary on; # Add Vary: Accept-Encoding header
    gzip_proxied any; # Compress responses for proxied requests
    gzip_comp_level 6; # Compression level (1-9, higher = more CPU, smaller size)
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss; # File types to compress


    # Define the upstream server (your Docker container)
    upstream fiscalismia_backend {
        server 127.0.0.1:3002; # Express server runs on this address inside the container
        keepalive 32; # Keep 32 idle connections open to backend
        keepalive_timeout 60s; # Idle connection timeout
        keepalive_requests 100; # Max requests per keepalive connection before closing
    }

    server {
        listen 80; # Nginx listens on port 80 inside the container
        server_name localhost; # Or your domain name

        client_max_body_size 50m; # max body size for client requests
        client_body_timeout 60s; # Timeout for reading client request body
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always; # Prevent clickjacking attacks
        add_header X-Content-Type-Options "nosniff" always; # Prevent MIME-sniffing attacks
        add_header X-XSS-Protection "1; mode=block" always; # Enable XSS filter in older browsers

        location / {
            # Add CORS headers only for allowed origins
            add_header 'Access-Control-Allow-Origin' $cors_header always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Accept' always;
            if ($request_method = 'OPTIONS') { # Handle CORS preflight requests
                return 204; # No content response
            }

            proxy_set_header Host $http_host; # Forward original Host header to backend
            proxy_set_header X-Real-IP $remote_addr; # Send client's real IP address
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Chain of proxy IPs
            proxy_set_header X-Forwarded-Proto $scheme; # Original protocol (http/https)
            proxy_set_header Connection ""; # Clear Connection header for keepalive
            proxy_http_version 1.1; # Use HTTP/1.1 for upstream (required for keepalive)

            proxy_read_timeout 90s; # timeout before nginx throws 504 Gateway Time-out
            proxy_connect_timeout 10s; # Timeout for establishing connection to backend
            proxy_send_timeout 60s; # Timeout for sending request to backend

            proxy_redirect off; # Don't rewrite Location/Refresh headers from backend
            proxy_buffering off; # Useful for streaming responses

            proxy_pass http://fiscalismia_backend; # Pass requests to the upstream server
        }
    }
}