name: Fiscalismia-Backend Pipeline

on:
  push:
    branches:
      - github-actions-workflow
  pull_request:
    branches:
      - github-actions-workflow

jobs:
  test:
    runs-on: ubuntu-latest

    continue-on-error: true

    services:
      postgres:
        image: postgres:16.3-alpine3.20
        env:
          POSTGRES_USER: fiscalismia_api
          POSTGRES_HOST: localhost
          POSTGRES_DB: fiscalismia
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_PORT: 5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout SCM
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.12.2'

    - name: Install dependencies
      run: |
        npm ci
        npm i -g snyk

    - name: Compiler Type Checks
      run: npm run typeCheck

    - name: Eslint Analysis
      run: npm run eslintAnalysis

    - name: Snyk Static Code Security Analysis
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      run: |
        snyk auth $SNYK_TOKEN
        npm run snykCodeAnalysis

    - name: Snyk Dependency Security Analysis
      run: npm run snykDependencyAnalysis

    - name: Publish Typecheck & Eslint & Snyk Reports
      uses: actions/upload-artifact@v4
      with:
        name: Fiscalismia-Backend-Reports
        path: |
          reports/
          !reports/.gitkeep

    - name: Initialize Database
      env:
        PGPASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      run: |
          psql -h localhost -U fiscalismia_api -d fiscalismia -f database/pgsql-ddl.sql
          psql -h localhost -U fiscalismia_api -d fiscalismia -f database/pgsql-dml.sql

    - name: REST API tests /w supertest
      env:
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        POSTGRES_USER: fiscalismia_api
        POSTGRES_HOST: localhost
        POSTGRES_DB: fiscalismia
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_PORT: 5432
      run: npm test

  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      actions: read

    steps:
    - name: Checkout SCM
      uses: actions/checkout@v4

    - name: Build Docker Image
      run: docker build --pull --rm -f "Dockerfile" -t ghcr.io/hangrybear666/fiscalismia-backend:latest "."

    - name: Login to Github Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Docker Image to GHCR
      run: docker push ghcr.io/hangrybear666/fiscalismia-backend:latest


